@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<script src="/js/pan.js" type="text/javascript"></script>
<script src="/js/commondata.js"></script>
<script src="/js/declaraInspectsearch.js" type="text/javascript"></script>

<script type="text/javascript">
    //传参示例 /Common/DeclareList?busitypeid=11&module=ddzx&role=customer
    //2016-5-16将三种角色、所有业务类型、所有入口的报关单列表统一到一个页面    
    var busitypeid = getQueryString("busitypeid"); var module = getQueryString("module"); var role = getQueryString("role");//module    这个参数这个项目应该可以不要

    var pgbar; var store_sbfs; var store_bgfs; var store_busitype;
    var common_data_jydw = [], common_data_sbfs = [], common_data_bgfs = [];

    var busitype = "";
    switch (busitypeid) {
        case "10":
            busitype = "空运出口"; break;
        case "11":
            busitype = "空运进口"; break;
        case "20":
            busitype = "海运出口"; break;
        case "21":
            busitype = "海运进口"; break;
        case "30":
            busitype = "陆运出口"; break;
        case "31":
            busitype = "陆运进口"; break;
        case "40-41":
            busitype = "国内"; break;
        case "50-51":
            busitype = "特殊区域"; break;
    }

    Ext.onReady(function () {
        Ext.Ajax.request({
            url: "/Common/Ini_Base_Data",
            params: {
                busitype: busitype
            },
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText)
                common_data_jydw = commondata.jydw;//经营单位  查询区要用
                common_data_sbfs = commondata.sbfs;//申报方式  这个基础数据调取出来的目的就是为了列表页字段显示时render处理
                common_data_bgfs = commondata.bgfs;//报关方式  这个基础数据调取出来的目的就是为了列表页字段显示时render处理

                initSearch();  //查询区域

                if (busitypeid == '50-51') {
                    Ext.getCmp('CONDITION2').setValue('DECLNO');
                }
                else {
                    Ext.getCmp('CONDITION2').setValue('CUSNO');
                }
                store_sbfs = Ext.create('Ext.data.JsonStore', {
                    fields: ['CODE', 'NAME'],
                    data: common_data_sbfs
                });
                store_bgfs = Ext.create('Ext.data.JsonStore', {
                    fields: ['CODE', 'NAME'],
                    data: common_data_bgfs
                });
                store_busitype = Ext.create('Ext.data.JsonStore', {
                    fields: ['CODE', 'NAME'],
                    data: common_data_busitype
                });
                var store = Ext.create('Ext.data.JsonStore', {
                    fields: ['ID', 'PREDECLCODE', 'DECLARATIONCODE', 'CUSTOMSSTATUS', 'ISPRINT', 'CODE', 'REPFINISHTIME', 'TRANSNAME', 'BUSIUNITCODE', 'CUSTOMERNAME', 'IETYPE',
                             'BUSISHORTNAME', 'PORTCODE', 'BLNO', 'REPWAYID', 'REPWAYNAME', 'DECLWAY', 'DECLWAYNAME', 'TRADEWAYCODES', 'CONTRACTNO', 'GOODSNUM',
                             'GOODSNW', 'SHEETNUM', 'ORDERCODE', 'CUSNO', 'ASSOCIATENO', 'CORRESPONDNO', 'BUSITYPE', 'DECL_TRANSNAME', 'DECLTYPE'],
                    pageSize: 22,
                    proxy: {
                        type: 'ajax',
                        url: '/Common/LoadDeclarationList',
                        reader: {
                            root: 'rows',
                            type: 'json',
                            totalProperty: 'total'
                        }
                    },
                    autoLoad: true,
                    listeners: {
                        beforeload: function () {
                            store.getProxy().extraParams = {
                                busitypeid: busitypeid, role: role,
                                CONDITION1: Ext.getCmp('CONDITION1').getValue(), VALUE1: Ext.getCmp("CONDITION1_1").getValue(),
                                CONDITION2: Ext.getCmp('CONDITION2').getValue(), VALUE2: Ext.getCmp("CONDITION2_1").getValue(),
                                CONDITION3: Ext.getCmp('CONDITION3').getValue(), VALUE3: Ext.getCmp("CONDITION3_1").getValue(),
                                CONDITION4: Ext.getCmp('CONDITION4').getValue(), VALUE4_1: Ext.Date.format(Ext.getCmp("CONDITION4_1").getValue(), 'Y-m-d H:i:s'), VALUE4_2: Ext.Date.format(Ext.getCmp("CONDITION4_2").getValue(), 'Y-m-d H:i:s'),
                            }
                        }
                    }
                })
                pgbar = Ext.create('Ext.toolbar.Paging', {
                    displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
                    store: store,
                    displayInfo: true
                })
                var gridpanel = Ext.create('Ext.grid.Panel', {
                    id: 'declare_grid',
                    store: store,
                    height: 535,
                    renderTo: 'appConId',
                    selModel: { selType: 'checkboxmodel' },
                    bbar: pgbar,
                    columns: [
                    { xtype: 'rownumberer', width: 35 },
                    { header: 'ID', dataIndex: 'ID', sortable: true, hidden: true },
                    { header: '海关状态', dataIndex: 'CUSTOMSSTATUS', width: 90, locked: true, renderer: render },
                    { header: '打印标志', dataIndex: 'ISPRINT', width: 70, renderer: render },
                    { header: '报关单号', dataIndex: 'DECLARATIONCODE', width: 140, locked: true, renderer: render },
                    { header: '委托单位', dataIndex: 'CUSTOMERNAME', width: 100, locked: role == 'supplier', hidden: role == 'customer' },
                    { header: '申报完成时间', dataIndex: 'REPFINISHTIME', width: 140 },
                    { header: '进/出', dataIndex: 'IETYPE', width: 80, hidden: busitypeid != '40-41' },
                    { header: '对应号', dataIndex: 'ASSOCIATENO', width: 110, hidden: busitypeid != '40-41' },//两单关联号
                    { header: '运输工具名称', dataIndex: 'DECLTYPE', width: 150, renderer: render },
                    { header: '业务类型', dataIndex: 'BUSITYPE', width: 90, renderer: render },// 业务类型
                    { header: '出口口岸', dataIndex: 'PORTCODE', width: 80 },
                    { header: '提运单号', dataIndex: 'BLNO', width: 180 },
                    { header: '申报方式', dataIndex: 'REPWAYNAME', width: 100, renderer: render },
                    { header: '报关方式', dataIndex: 'DECLWAYNAME', width: 100, renderer: render },
                    { header: '贸易方式', dataIndex: 'TRADEWAYCODES', width: 80 },
                    { header: '合同协议号', dataIndex: 'CONTRACTNO', width: 110 },
                    { header: '件数', dataIndex: 'GOODSNUM', width: 60 },
                    { header: '重量', dataIndex: 'GOODSNW', width: 60 },
                    { header: '张数', dataIndex: 'SHEETNUM', width: 60 },
                    { header: '多单关联号', dataIndex: 'CORRESPONDNO', width: 100, hidden: busitypeid != '40-41' },//多单关联号
                    { header: '订单编号', dataIndex: 'ORDERCODE', width: 100 },
                    { header: '经营单位', dataIndex: 'BUSISHORTNAME', width: 100, locked: role == 'customer' },
                    { header: '客户编号', dataIndex: 'CUSNO', width: 125, locked: role == 'enterprise' }
                    ],
                    viewConfig: {
                        enableTextSelection: true
                    }
                })               
            }
        })
    });

    function render(value, cellmeta, record, rowIndex, columnIndex, store) {
        var rtn = "";
        var dataindex = cellmeta.column.dataIndex;
        if (dataindex == "CUSTOMSSTATUS" && value) {
            rtn = "<div style='color:red;cursor:pointer; text-decoration:underline;' onclick='showcustoms_receipt(\"" + record.get("CODE") + "\")'>" + value + "</div>";
        }
        if (dataindex == "DECLARATIONCODE" && value) {
            rtn = "<div style='color:red;cursor:pointer; text-decoration:underline;' onclick='FileConsult(\"" + record.get("ORDERCODE") + "\",\"" + escape(record.get("BUSITYPE")) + "\",\"" + record.get("CODE") + "\")'>" + value + "</div>";
        }
        if (dataindex == "ISPRINT") {
            rtn = value == "0" ? "未打印" : "已打印";
        }
        if (dataindex == "REPWAYNAME" && value) {
            var rec = store_sbfs.findRecord('CODE', value);
            if (rec) {
                rtn = rec.get("NAME");
            }
        }
        if (dataindex == "DECLWAYNAME" && value) {
            var rec = store_bgfs.findRecord('CODE', value);
            if (rec) {
                rtn = rec.get("NAME");
            }
        }
        if (dataindex == "BUSITYPE" && value) {
            var rec = store_busitype.findRecord('CODE', value);
            if (rec) {
                rtn = rec.get("NAME");
            }
        }
        if (dataindex == "DECLTYPE" && value) {
            if (value == 13 || value == 17) {
                rtn = record.get("DECL_TRANSNAME");//取预制报关单的运输工具名称
            }
            else {
                rtn = record.get("TRANSNAME");//取草单的运输工具名称
            }
        }
        return rtn;
    }

    //查询
    function Select() {
        pgbar.moveFirst();
    }

    //打开调阅信息
    function FileConsult(ORDERCODE, BUSITYPE, PREDECLCODE) {
        opencenterwin("/Common/FileConsult?source=declare&ORDERCODE=" + ORDERCODE + "&BUSITYPE=" + BUSITYPE + "&PREDECLCODE=" + PREDECLCODE, 1200, 900);
    }

    function ClickShowwinwj() {   //打开调阅信息
        var recs = Ext.getCmp("declare_grid").getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要调阅的记录！');
            return;
        }
        opencenterwin("/Common/FileConsult?source=declare&ORDERCODE=" + recs[0].get("ORDERCODE") + "&BUSITYPE=" + recs[0].get("BUSITYPE") + "&PREDECLCODE=" + recs[0].get("CODE"), 1200, 900);
    }

    function MultiPrint() {
        var recs = Ext.getCmp("declare_grid").getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要打印的记录！');
            return;
        }
        var data = "[";
        for (var i = 0; i < recs.length; i++) {
            if (i == recs.length - 1) {
                data += "{BUSITYPE:'" + recs[i].get("BUSITYPE") + "',CODE:'" + recs[i].get("CODE") + "'}]"
            }
            else {
                data += "{BUSITYPE:'" + recs[i].get("BUSITYPE") + "',CODE:'" + recs[i].get("CODE") + "'},"
            }
        }
        opencenterwin("/Common/MultiPrint?source=declare&data=" + data, 1100, 700);
    }

    //显示海关状态回执记录
    function showcustoms_receipt(code_bgd) {
        var store_customs = Ext.create('Ext.data.JsonStore', {
            fields: ['TIMES', 'DECLSTATUS'],
            proxy: {
                type: 'ajax',
                url: '/Common/LoadCustomsReceipt?bgdcode=' + code_bgd,
                reader: {
                    root: 'rows',
                    type: 'json'
                }
            },
            autoLoad: true
        })
        var grid_customs = Ext.create('Ext.grid.Panel', {
            title: '海关状态回执',
            store: store_customs,
            height: 100,
            columns: [
                { xtype: 'rownumberer', width: 35 },
                { header: '时间', dataIndex: 'TIMES', width: 130 },
                { header: '海关状态', dataIndex: 'DECLSTATUS', flex: 1 }
            ]
        })
        var win_customs_status = Ext.create("Ext.window.Window", {
            title: "",
            width: 400,
            height: 400,
            layout: "fit",
            modal: true,
            items: [grid_customs]
        });
        win_customs_status.show();
    }
    
</script>

<div class="container">
    <div id="div_form" style="width:100%;"></div>
    <div>
        <div class="btn-group" role="group">
            <a class="btn btn-primary btn-sm" onclick="MultiPrint()"><i class="fa fa-print"></i>&nbsp;批量打印</a>
            <button type="button" onclick="ClickShowwinwj()" class="btn btn-primary btn-sm"><i class="fa fa-rss"></i>&nbsp;调阅</button>
        </div>
        <div class="btn-group fr" role="group">
            <button onclick="Select()" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;查询</button>
            <button onclick="Reset()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-refresh"></i>&nbsp;重置</button>
        </div>
    </div>
    <div id="appConId" style="width:100%;"></div>
</div>
