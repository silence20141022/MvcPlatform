<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<script src="/js/pan.js" type="text/javascript"></script>
<script src="/js/commondata.js"></script>
<script src="/js/search.js" type="text/javascript"></script>

<script type="text/javascript">
    var store_Trade; var store_sbfs;
    var showIndex = 2;
    var formpanel, gridpanel;    
    var common_data_jydw = [], common_data_sbfs = [], common_data_sbgq = [], common_data_bgfs = [], common_data_bzzl = [], common_data_myfs = [];

    Ext.onReady(function () {
        Ext.Ajax.request({//对公共基础数据发起一次请求
            url: "/Common/Ini_Base_Data",
            params: { busitype: '海运出口' },
            success: function (response, option) {
                var commondata = Ext.decode(response.responseText)
                common_data_jydw = commondata.jydw;//经营单位
                common_data_sbfs = commondata.sbfs;//申报方式
                common_data_sbgq = commondata.sbgq;//申报关区 进口口岸
                common_data_bgfs = commondata.bgfs;//报关方式
                common_data_bzzl = commondata.bzzl;//包装种类
                common_data_myfs = commondata.myfs;//贸易方式
                //查询区域
                initSearch();
                //列表
                store_sbfs = Ext.create('Ext.data.JsonStore', {
                    fields: ['CODE', 'NAME'],
                    data: common_data_sbfs
                });
                store_Trade = Ext.create('Ext.data.JsonStore', {
                    fields: ['ID', 'ENTRUSTTYPEID', 'STATUS', 'DECLSTATUS', 'INSPSTATUS', 'CODE', 'CUSNO', 'PORTCODE', 'PORTNAME',
                       'TURNPRENO', 'SUBMITTIME', 'GOODSGW', 'BUSIUNITNAME', 'BUSISHORTNAME',
                       'CUSTOMERNAME', 'CONTRACTNO', 'TOTALNO', 'DIVIDENO', 'REPWAYID', 'GOODSNUMGOODSNW', 'GOODSWEIGHT',
                       'GOODSGW', 'CUSTOMDISTRICTCODE', 'CUSTOMDISTRICTNAME', 'LAWCONDITION', 'ASSOCIATENO', 'FIRSTLADINGBILLNO',
                       'SECONDLADINGBILLNO', 'LADINGBILLNO', 'ARRIVEDNO', 'ISINVALID', 'BUSITYPE'],
                    pageSize: 20,
                    proxy: {
                        type: 'ajax',
                        url: '/Common/LoadList',
                        reader: {
                            root: 'rows',
                            type: 'json',
                            totalProperty: 'total'
                        }
                    },
                    autoLoad: true,
                    listeners: {
                        beforeload: function () {
                            store_Trade.getProxy().extraParams = {
                                busitypeid: 20,
                                OnlySelf: Ext.get('OnlySelfi').el.dom.className,
                                CONDITION1: Ext.getCmp('CONDITION1').getValue(), VALUE1: Ext.getCmp("CONDITION1_1").getValue(),
                                CONDITION2: Ext.getCmp('CONDITION2').getValue(), VALUE2: Ext.getCmp("CONDITION2_1").getValue(),
                                CONDITION3: Ext.getCmp('CONDITION3').getValue(), VALUE3: Ext.getCmp("CONDITION3_1").getValue(),
                                CONDITION4: Ext.getCmp('CONDITION4').getValue(), VALUE4_1: Ext.Date.format(Ext.getCmp("CONDITION4_1").getValue(), 'Y-m-d H:i:s'), VALUE4_2: Ext.Date.format(Ext.getCmp("CONDITION4_2").getValue(), 'Y-m-d H:i:s'),
                                CONDITION5: Ext.getCmp('CONDITION5').getValue(), VALUE5: Ext.getCmp("CONDITION5_1").getValue(),
                                CONDITION6: Ext.getCmp('CONDITION6').getValue(), VALUE6: Ext.getCmp("CONDITION6_1").getValue(),
                                CONDITION7: Ext.getCmp('CONDITION7').getValue(), VALUE7: Ext.getCmp("CONDITION7_1").getValue(),
                                CONDITION8: Ext.getCmp('CONDITION8').getValue(), VALUE8_1: Ext.Date.format(Ext.getCmp("CONDITION8_1").getValue(), 'Y-m-d H:i:s'), VALUE8_2: Ext.Date.format(Ext.getCmp("CONDITION8_2").getValue(), 'Y-m-d H:i:s')
                            }
                        }
                    }
                })
                pgbar = Ext.create('Ext.toolbar.Paging', {
                    displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
                    store: store_Trade,
                    displayInfo: true
                })
                //显示
                gridpanel = Ext.create('Ext.grid.Panel', {
                    renderTo: "appConId",
                    store: store_Trade,
                    height: 500,
                    selModel: { selType: 'checkboxmodel' },
                    bbar: pgbar,
                    enableColumnHide: false,
                    columns: [
                    { xtype: 'rownumberer', width: 35 },
                    { header: 'ID', dataIndex: 'ID', hidden: true, locked: true },
                    { header: '订单状态', dataIndex: 'STATUS', width: 95, renderer: render, locked: true },
                    { header: '报关状态', hidden: true, dataIndex: 'DECLSTATUS', width: 90, renderer: render, locked: true },
                    { header: '报检状态', hidden: true, dataIndex: 'INSPSTATUS', width: 90, renderer: render, locked: true },
                    { header: '订单编号', dataIndex: 'CODE', width: 100, locked: true },
                    { header: '客户编号', dataIndex: 'CUSNO', width: 130, locked: true },
                    { header: '经营单位', dataIndex: 'BUSISHORTNAME', width: 100, sortable: true, locked: true },
                    { header: '合同发票号', dataIndex: 'CONTRACTNO', width: 140, locked: true },
                    { header: '提单号', dataIndex: 'LADINGBILLNO', width: 110, locked: true },
                    { header: '运抵编号', dataIndex: 'ARRIVEDNO', width: 150 },
                    { header: '件数/重量', dataIndex: 'GOODSNUMGOODSNW', width: 90 },//该字段需要拼接
                    { header: '毛重', dataIndex: 'GOODSGW', width: 60 },
                    { header: '申报关区', dataIndex: 'CUSTOMDISTRICTCODE', width: 60 },//需要显示编码
                    { header: '进/出口岸', dataIndex: 'PORTCODE', width: 70 },//需要显示编码
                    { header: '申报方式', dataIndex: 'REPWAYID', width: 100, renderer: render },
                    { header: '转关预录号', dataIndex: 'TURNPRENO', width: 70 },//需要确定具体字段
                    { header: '法检', dataIndex: 'LAWCONDITION', width: 60, renderer: render },
                    { header: '委托时间', dataIndex: 'SUBMITTIME', width: 130 }
                    ],
                    //添加双击事件
                    listeners:
                    {
                        'itemdblclick': function (view, record, item, index, e) {
                            opencenterwin("/OrderSeaOut/Create?ordercode=" + record.data.CODE + "&OrderId=" + record.data.ID, 1600, 900);
                        }
                    },
                    viewConfig: {
                        enableTextSelection: true
                    }
                });
            }
        });
    });

    function render(value, cellmeta, record, rowIndex, columnIndex, store) {
        var rtn = "";
        var dataindex = cellmeta.column.dataIndex;
        ////大于等于20  小于40  报关状态叫【报关报检都叫预审中】   ==40  【报关报检状态都叫预审完成】  ==45  【报关报检都叫制单已受理】
        switch (dataindex) {
            case "STATUS":
                if (record.get("ISINVALID") == "0") {
                    rtn = "已作废";
                }
                else {
                    rtn = orders_tatus[value];
                }
                break;
            case "DECLSTATUS":
            case "INSPSTATUS":
                if (record.get("ISINVALID") == "0") {
                    rtn = "已作废";
                }
                else {
                    if (value >= 20 && value < 40) {
                        rtn = "预审中";
                    }
                    if (value == 40) {
                        rtn = "预审完成";
                    }
                    if (value == 45) {
                        rtn = "制单已受理";
                    }
                    if (value > 45) {
                        rtn = orders_tatus[value];
                    }
                }
                break;
            case "REPWAYID":
                var rec = store_sbfs.findRecord('CODE', value);
                if (rec) {
                    rtn = rec.get("NAME");
                }
                break;
            case "LAWCONDITION":
                rtn = value ? "有" : "无";
                break
        }
        return rtn;
    }
    function SaveDefault() {
        var data = formpanel.getForm().getValues();
        Ext.Ajax.request({
            url: "/Common/SaveQuerySetting",
            params: { formdata: Ext.encode(data) },
            success: function (option, success, response) {
                if (option.responseText == '{success:true}') {
                    Ext.MessageBox.alert('提示', '保存成功！');
                }
                else {
                    Ext.MessageBox.alert('提示', '保存失败！');
                }
            }
        });
    }

    function Delete() {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要删除的记录！');
            return;
        }
        if (recs[0].data.STATUS != '1' && recs[0].data.STATUS != '10') {
            Ext.MessageBox.alert('提示', '已委托的订单不能删除！');
            return;
        }
        Ext.MessageBox.confirm("提示", "确定要删除所选择的记录吗？", function (btn) {
            if (btn == 'yes') {
                Ext.Ajax.request({
                    url: '/Common/Delete',
                    params: { ordercode: recs[0].get("CODE") },
                    success: function (response, success, option) {
                        var res = Ext.decode(response.responseText);
                        if (res.success) {
                            Ext.MessageBox.alert('提示', '删除成功！');
                            store_Trade.load();
                        }
                        else {
                            Ext.MessageBox.alert('提示', '删除失败！');
                        }
                    }
                });
            }
        });
    }

    function Update() {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要修改的记录！');
            return;
        }
        opencenterwin("/OrderSeaOut/Create?OrderId=" + recs[0].get("ID"), 1600, 900);
    }

    function Select() {
        pgbar.moveFirst();
    }
    function Open() {
        opencenterwin("/OrderSeaOut/Create", 1600, 900);
    }
    function ChangeStyle() {
        if (showIndex == 2) {
            gridpanel.columns[2].hide();
            gridpanel.columns[3].show();
            gridpanel.columns[4].hide();
            showIndex++;
        } else if (showIndex == 3) {
            gridpanel.columns[2].hide();
            gridpanel.columns[3].hide();
            gridpanel.columns[4].show();
            showIndex++;
        } else if (showIndex == 4) {
            gridpanel.columns[2].show();
            gridpanel.columns[3].hide();
            gridpanel.columns[4].hide();
            showIndex = 2;
        }
    }

    function openwin(type) {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要维护的记录！');
            return;
        }
        var plwhids = "";
        for (var i = 0; i < recs.length; i++) {
            plwhids += recs[i].data.ID + ',';
        }
        plwhids = plwhids.substr(0, plwhids.length - 1);
        opencenterwin("/Common/BatchMaintain?ids=" + plwhids + "&type=" + type, 1200, 600);
    }
    function Views() {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要查看详细的记录！');
            return;
        }
        opencenterwin("/Common/OrderView?OrderId=" + recs[0].get("ID") + "&ordercode=" + recs[0].get("CODE") + "&busitypeid=" + recs[0].get("BUSITYPE"), 1200, 800);
    }
    function changeOnlySelfStyle() {
        var OnlySelfDom = Ext.get('OnlySelfi');
        if (Ext.get('OnlySelfi').el.dom.className.replace(/(^\s*)|(\s*$)/g, "") == "fa fa-check-square-o") {
            OnlySelfDom.removeCls("fa fa-check-square-o")
            OnlySelfDom.addCls("fa fa-square-o");
        }
        else {
            OnlySelfDom.removeCls("fa fa-square-o")
            OnlySelfDom.addCls("fa fa-check-square-o");
        }
    }

</script>

<body>
    <div class="container">         
        <div id="div_form" style="width:100%;"></div>
        <div>
            <div class="btn-group" role="group">
                <button onclick="ChangeStyle()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-exchange fa-fw"></i>&nbsp;状态切换</button>
                <button onclick="Open()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-plus fa-fw"></i>&nbsp;添加</button>
                <button onclick="Delete()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-trash-o"></i>&nbsp;删除</button>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" onclick="openwin('HYCK')">
                        <i class=" fa fa-pencil-square-o fa-fw">
                        </i>&nbsp;批量维护
                    </button>
                </div>
                <button type="button" onclick="Views()" class="btn btn-primary btn-sm"><i class="fa fa-file-text-o"></i>&nbsp;详细</button>
            </div>
            <div class="btn-group fr" role="group">
                <button onclick="changeOnlySelfStyle()" class="btn btn-primary btn-sm"><i id="OnlySelfi" class="fa fa-check-square-o"></i>&nbsp;仅本人</button>
                <button onclick="Select()" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;查询</button>
                <button onclick="Reset()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-refresh"></i>&nbsp;重置</button>
                <button onclick="SaveDefault()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;保存默认</button>
            </div>
        </div>
        <div id="appConId" style="width:100%"></div>
    </div>
</body>